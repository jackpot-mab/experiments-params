definitions:
  model.Arm:
    properties:
      name:
        type: string
      reward_data_parameters:
        items:
          $ref: '#/definitions/model.RewardDataParameter'
        type: array
    type: object
  model.Experiment:
    properties:
      arms:
        items:
          $ref: '#/definitions/model.Arm'
        type: array
      experiment_id:
        type: string
      model_parameters:
        $ref: '#/definitions/model.MLModelParameters'
      parameters: {}
      policy_type:
        type: string
    type: object
  model.MLModelParameters:
    properties:
      input_features:
        items:
          type: string
        type: array
      model_type:
        type: string
      output_classes:
        items:
          type: string
        type: array
    type: object
  model.RewardDataParameter:
    properties:
      name:
        type: string
      value: {}
    type: object
  model.RewardDataParameterUpsert:
    properties:
      arm:
        type: string
      experiment_id:
        type: string
      name:
        type: string
      value: {}
    type: object
info:
  contact: {}
paths:
  /experiment:
    post:
      consumes:
      - application/json
      description: Create experiment in configuration db.
      parameters:
      - description: Experiment data
        in: body
        name: experiment
        required: true
        schema:
          $ref: '#/definitions/model.Experiment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: creates experiment data and return experiment
      tags:
      - experiments-params
    put:
      consumes:
      - application/json
      description: Update configuration db with experiment data.
      parameters:
      - description: Experiment data
        in: body
        name: experiment
        required: true
        schema:
          $ref: '#/definitions/model.Experiment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: updates experiment data and return experiment
      tags:
      - experiments-params
  /experiment/{experiment_id}:
    get:
      consumes:
      - application/json
      description: Consults configuration DB to fetch experiment data.
      parameters:
      - description: Experiment ID
        in: path
        name: experiment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: return experiment data
      tags:
      - experiments-params
  /experiment/parameter:
    post:
      consumes:
      - application/json
      description: add or create experiment/arm parameter
      parameters:
      - description: Reward data parameter
        in: body
        name: experiment
        required: true
        schema:
          $ref: '#/definitions/model.RewardDataParameterUpsert'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: add a parameter to an experiment/arm or update the parameter value
        if already exists.
      tags:
      - experiments-params
  /experiments:
    get:
      consumes:
      - application/json
      description: Consults configuration DB to fetch experiments data.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: return data from all experiments
      tags:
      - experiments-params
swagger: "2.0"
